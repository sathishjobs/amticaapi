{"version":3,"sources":["logo.svg","captain/type.js","captain/reducer/user.js","captain/reducer/index.js","captain/index.js","persistorLoader.js","components/formHelpers/textInput.js","api/user.js","captain/action/user.js","components/signIn.js","components/formHelpers/formValidations.js","components/signUp.js","components/home.js","components/privateRoute.js","Root.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","type","USER_SIGN_IN","USER_SIGN_UP","USER_SIGN_OUT","initialState","data","isLoggedIn","combineReducers","user","state","arguments","length","undefined","action","Object","objectSpread","form","middlewares","thunk","persistConfig","key","storage","persistedReducer","persistReducer","reducers","store","createStore","compose","applyMiddleware","apply","captain","persistor","persistStore","persistorLoader","props","react_default","a","createElement","TextInputWithValidations","_ref","input","containerStyle","label","_ref$inputType","errorMsg","labelStyle","inputType","placeholder","_ref$meta","meta","touched","error","custom","objectWithoutProperties","style","className","Form","Field","assign","TextArea","Message","color","size","axios","defaults","baseURL","headers","post","User","UserApi","classCallCheck","this","path","args","concat","signInSuccess","signUpSuccess","SignIn","loading","loggedIn","_handleSignIn","_callee","values","regenerator_default","wrap","_context","prev","next","_this","setState","signIn","sent","t0","mounted","finish","stop","prevProps","from","location","pathname","Redirect","to","Grid","textAlign","verticalAlign","Column","maxWidth","Header","as","onSubmit","handleSubmit","component","TextInput","name","Button","disabled","submitting","basic","fluid","content","marginTop","Link","Component","reduxForm","validate","errors","email","test","password","connect","asyncToGenerator","mark","dispatch","_ref2","signin","response","SubmissionError","defineProperty","field","message","_x","SignUp","_handleSignUp","signUp","_ref3","_callee2","_ref4","_context2","_x2","Home","handleLogout","signOut","onClick","primary","console","log","rest","Route","render","RootWrapper","BrowserRouter","privateRoute","redux","purge","App","es","integration_react","Root","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3ae2eeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\r\n    USER_SIGN_IN : \"USER_SIGN_IN\",\r\n    USER_SIGN_UP : \"USER_SIGN_UP\",\r\n    USER_SIGN_OUT : \"USER_SIGN_OUT\",\r\n};","import type from \"../type\";\r\n\r\nlet initialState = {\r\n    data: null,\r\n    isLoggedIn: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case type.USER_SIGN_IN:\r\n            return { ...state, data: action.data, isLoggedIn: true };\r\n        case type.USER_SIGN_UP:\r\n            return { ...state, data: action.data, isLoggedIn: true };\r\n        case type.USER_SIGN_OUT:\r\n            return { ...state, data: null, isLoggedIn: false }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as form } from \"redux-form\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({\r\n    user,\r\n    form\r\n})","import {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {persistStore,persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducer\";\r\n\r\nconst middlewares = [\r\n    thunk,\r\n];\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig,reducers);\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n    undefined,\r\n    compose(applyMiddleware(...middlewares))\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {\r\n    store,\r\n    persistor\r\n}","import React from 'react';\r\n\r\nexport default (props)=>(\r\n    <div>\r\n        <h3>Loading...</h3>\r\n    </div>\r\n);","import React from \"react\";\r\n// import { signUpValidation, normalizePhone, isUserExist } from \"./validation\";\r\nimport { Form, Message, } from \"semantic-ui-react\";\r\nimport \"./formstyle.css\";\r\n\r\nconst TextInputWithValidations = ({\r\n  input,\r\n  containerStyle,\r\n  label,\r\n  errorMsg,\r\n  labelStyle,\r\n  inputType = \"text\",\r\n  placeholder,\r\n  meta: { touched, error },\r\n  ...custom\r\n}) => (\r\n  <div style={containerStyle} className=\"inputWrapper\">\r\n    <Form.Field>\r\n      <label>{label}</label>\r\n      {inputType !== \"textarea\" ? (\r\n        <input\r\n          type={inputType}\r\n          placeholder={placeholder}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      ) : (\r\n        <Form.TextArea placeholder={placeholder} {...input} {...custom} />\r\n      )}\r\n    </Form.Field>\r\n\r\n    {error &&\r\n      touched && (\r\n        <Message color=\"red\" size=\"mini\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n  </div>\r\n);\r\n\r\nexport default TextInputWithValidations;\r\n","import axios from \"axios\";\r\n\r\n//this is enum of environment status\r\nlet env = \"production\";\r\n\r\nif (env === \"development\")\r\n    axios.defaults.baseURL = \"http://localhost:9090/\";\r\nelse axios.defaults.baseURL = \"https://amticachallange.herokuapp.com/\";\r\n\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n    \"application/x-www-form-urlencoded\";\r\n\r\nclass UserApi {\r\n    constructor() {\r\n        this.path = \"user\";\r\n    }\r\n\r\n    async signin(args) {\r\n        try {\r\n            const { data } = await axios.post(`${this.path}/signin`, { ...args });\r\n            return data;\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    async signUp(args) {\r\n        try {\r\n            const { data } = await axios.post(`${this.path}/signup`, { ...args });\r\n            return data;\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    async isUserExist(args){\r\n        try {\r\n            const { data } = await axios.post(`${this.path}/isUserExist`,{...args});\r\n            return data;\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\r\nexport const User = new UserApi();\r\n","import type from \"../type\";\r\nimport { User } from \"../../api/user\";\r\nimport { SubmissionError } from \"redux-form\";\r\n\r\nfunction signInSuccess(data) {\r\n    return {\r\n        type: type.USER_SIGN_IN,\r\n        data\r\n    }\r\n};\r\n\r\nfunction signUpSuccess(data) {\r\n    return {\r\n        type: type.USER_SIGN_UP,\r\n        data,\r\n    }\r\n}\r\n\r\nexport function signOut(){\r\n    return {\r\n        type : type.USER_SIGN_OUT,\r\n        data : null,\r\n    }\r\n}\r\n\r\nexport function signIn(values) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = await User.signin(values);\r\n            dispatch(signInSuccess(data));\r\n        } catch (e) {\r\n            if (e.response && e.response.data && e.response.data.error) {\r\n                throw new SubmissionError({ [e.response.data.field]: e.response.data.message, _error: \"Login Failed\" });\r\n            }\r\n           throw e;\r\n        } \r\n    };\r\n}\r\n\r\n\r\nexport function signUp(values) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = await User.signUp(values);\r\n            dispatch(signUpSuccess(data));\r\n        } catch (e) { \r\n            if (e.response && e.response.data && e.response.data.error) {\r\n                throw new SubmissionError({ [e.response.data.field]: e.response.data.message, _error: \"Login Failed\" });\r\n            }\r\n            throw e;\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/**\r\n|--------------------------------------------------\r\n| Local imports\r\n|--------------------------------------------------\r\n*/\r\nimport TextInput from \"./formHelpers/textInput\";\r\nimport { signInValidation } from \"./formHelpers/formValidations\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { signIn } from \"../captain/action/user\";\r\nimport \"./style.css\";\r\nimport {\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n// import { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        loading: false,\r\n        loggedIn: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if(this.props.user.isLoggedIn != prevProps.user.isLoggedIn){\r\n            this.setState({\r\n                loggedIn : this.props.user.isLoggedIn\r\n            })\r\n        }\r\n      }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (this.props.user.isLoggedIn != nextProps.user.isLoggedIn) {\r\n    //         this.setState({\r\n    //             loggedIn: nextProps.user.isLoggedIn\r\n    //         })\r\n    //     };\r\n    //     return true;\r\n    // }\r\n\r\n\r\n    _handleSignIn = async values => {\r\n        try {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            let result = await this.props.signIn(values);\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n        finally {\r\n            if(this.mounted){\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n        let { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n\r\n        if (this.state.loggedIn) return <Redirect to={from} />;\r\n        return (\r\n            <div>\r\n                <br />\r\n                <br />\r\n                <Grid\r\n                    textAlign=\"center\"\r\n                    verticalAlign=\"middle\"\r\n                >\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header\r\n                            className=\"textColor\"\r\n                            as=\"h2\"\r\n                            color=\"blue\"\r\n                            textAlign=\"center\"\r\n                        >\r\n                            Amtica\r\n            </Header>\r\n                        <br />\r\n                        <Form onSubmit={this.props.handleSubmit(this._handleSignIn)}>\r\n                            <Field\r\n                                component={TextInput}\r\n                                name=\"email\"\r\n                                label=\"\"\r\n                                containerStyle={{}}\r\n                                placeholder=\"Email address\"\r\n                            />\r\n\r\n                            <Field\r\n                                component={TextInput}\r\n                                name=\"password\"\r\n                                label=\"\"\r\n                                containerStyle={{}}\r\n                                inputType=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                loading={this.state.loading}\r\n                                disabled={this.props.submitting}\r\n                                basic\r\n                                fluid\r\n                                color=\"blue\"\r\n                                content=\"Sign In\"\r\n                            />\r\n                            <div style={{marginTop : \"6px\",textAlign : \"left\"}}>\r\n                                <Link to=\"/signup\">Click here to Sign Up</Link>\r\n                            </div>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignIn = reduxForm({\r\n    form: \"signin\",\r\n    validate: signInValidation\r\n})(SignIn);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn })(SignIn);\r\n","export const signInValidation = values => {\r\n\r\n    const errors = {};\r\n  \r\n    if (!values.email) {\r\n      errors.email = \"Email address is required\";\r\n    }\r\n  \r\n    const checkEmail = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n    if (values.email && !checkEmail.test(values.email)) {\r\n      errors.email = \"Email is invalid !\";\r\n    }\r\n  \r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  export const signUpValidation = values => {\r\n    const errors = {};\r\n  \r\n    if (!values.email) {\r\n      errors.email = \"Email address is required\";\r\n    }\r\n  \r\n    const checkEmail = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    if(!values.name){\r\n        errors.name = \"Name is required!\"\r\n    }\r\n\r\n    if (values.email && !checkEmail.test(values.email)) {\r\n      errors.email = \"Email is invalid!\";\r\n    }\r\n  \r\n    if (!values.password) {\r\n      errors.password = \"Password is required!\";\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n/**\r\n|--------------------------------------------------\r\n| Local imports\r\n|--------------------------------------------------\r\n*/\r\nimport TextInput from \"./formHelpers/textInput\";\r\nimport { signUpValidation } from \"./formHelpers/formValidations\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { signUp } from \"../captain/action/user\";\r\n\r\nimport \"./style.css\";\r\nimport {\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n// import { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        loading: false,\r\n        loggedIn: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if(this.props.user.isLoggedIn !== prevProps.user.isLoggedIn){\r\n            this.setState({\r\n                loggedIn : this.props.user.isLoggedIn\r\n            })\r\n        }\r\n      }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    _handleSignUp = async values => {\r\n        try {\r\n            this.setState({\r\n                loading: true\r\n            });\r\n            await this.props.signUp(values);\r\n        } catch (error) {\r\n            throw error;\r\n        } finally {\r\n            if (this.mounted) {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n        if (this.state.loggedIn) return <Redirect to={from} />;\r\n        return (\r\n            <div>\r\n                <br />\r\n                <br />\r\n                <Grid\r\n                    textAlign=\"center\"\r\n                    verticalAlign=\"middle\"\r\n                >\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header\r\n                            className=\"textColor\"\r\n                            as=\"h2\"\r\n                            color=\"blue\"\r\n                            textAlign=\"center\"\r\n                        >\r\n                            Amtica\r\n            </Header>\r\n                        <br />\r\n                        <Form onSubmit={this.props.handleSubmit(this._handleSignUp)}>\r\n                            <Field\r\n                                component={TextInput}\r\n                                name=\"name\"\r\n                                label=\"\"\r\n                                containerStyle={{}}\r\n                                placeholder=\"Name\"\r\n                            />\r\n                            <Field\r\n                                component={TextInput}\r\n                                name=\"email\"\r\n                                label=\"\"\r\n                                containerStyle={{}}\r\n                                placeholder=\"Email address\"\r\n                            />\r\n\r\n                            <Field\r\n                                component={TextInput}\r\n                                name=\"password\"\r\n                                label=\"\"\r\n                                containerStyle={{}}\r\n                                inputType=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                loading={this.state.loading}\r\n                                disabled={this.props.submitting}\r\n                                basic\r\n                                fluid\r\n                                color=\"blue\"\r\n                                content=\"Sign Up\"\r\n                            />\r\n                            <div className=\"authActionWrapper\">\r\n                                <Link to=\"/signin\">Already have account Sign In </Link>\r\n                            </div>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignUp = reduxForm({\r\n    form: \"signup\",\r\n    validate: signUpValidation,\r\n})(SignUp);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signUp })(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\nimport {signOut} from \"../captain/action/user\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./style.css\";\r\nclass Home extends Component {\r\n    state = {  }\r\n    handleLogout = ()=>{\r\n        this.props.signOut();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"homeWrapper\">\r\n                    <h3>{`Hi ${this.props.user.data.name} Welcome to Home :)`}</h3>\r\n                    <Button onClick={this.handleLogout} primary>Logout</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\nexport default connect(mapStateToProps,{signOut})(Home);","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    Route,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst  PrivateRoute = ({user, component: Component, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user.isLoggedIn ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  \r\n  const mapStateToProps = (state)=>{\r\n      console.log(\"private is triggered\");\r\n      return {\r\n          user : state.user\r\n      }\r\n  };\r\n\r\nexport default connect(mapStateToProps,{})(PrivateRoute);\r\n  ","import React from 'react';\r\nimport SignIn from \"./components/signIn\";\r\nimport SignUp from \"./components/signUp\";\r\nimport Home from \"./components/home\";\r\nimport PrivateRoute from \"./components/privateRoute\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nconst RootWrapper = (props) => {\r\n    console.log(\"From Root Wrapper\");\r\n    console.log(props);\r\n    return <Router>\r\n        <div>\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n        </div>\r\n    </Router>\r\n}\r\n\r\n\r\nexport default RootWrapper;\r\n","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport logo from './logo.svg';\nimport './App.css';\nimport redux from \"./captain\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport StoreInitialLoader from \"./persistorLoader\";\nimport MainWrapper from \"./Root\";\nredux.persistor.purge();\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={redux.store}>\n        <PersistGate loading={<StoreInitialLoader/>} persistor={redux.persistor}>\n          <MainWrapper/>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}